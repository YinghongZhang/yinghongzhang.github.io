<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Live Once</title>
    <description>King of the world</description>
    <link>http://localhost:8080/</link>
    <atom:link href="http://localhost:8080/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Wed, 02 May 2018 12:39:56 +0800</pubDate>
    <lastBuildDate>Wed, 02 May 2018 12:39:56 +0800</lastBuildDate>
    <generator>Jekyll v3.7.3</generator>
    
      <item>
        <title>系分 Lesson7</title>
        <description>&lt;h2 id=&quot;lesson7预定酒店领域模型-和-er模型&quot;&gt;Lesson7：预定酒店领域模型 和 ER模型&lt;/h2&gt;

&lt;h3 id=&quot;领域模型&quot;&gt;领域模型&lt;/h3&gt;

&lt;p&gt;类图如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/system-analysis/lesson7/model.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;按照用户的角度，从红点处开始阅读是比较符合用户操作顺序的。&lt;/li&gt;
  &lt;li&gt;图中灰色背景的为中间实体，青色为数据库实体。&lt;/li&gt;
  &lt;li&gt;订单信息包括：用户信息、信用卡支付信息、房间类型等，这些在订单确认后是必须保存到数据库当中的。通常web端会把reservation先暂存，购物车里的订单是不会消失的，直到用户进行了某个操作，在确认支付之前是不需要加入数据库的。&lt;/li&gt;
  &lt;li&gt;房间、旅馆、地点等基础信息是数据库必须含有的静态信息。&lt;/li&gt;
  &lt;li&gt;其他如购物车、summary、单个购物项都是暂存的
    &lt;h4 id=&quot;e-r模型&quot;&gt;E-R模型&lt;/h4&gt;
    &lt;p&gt;&lt;img src=&quot;/img/in-post/system-analysis/lesson7/ER.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;说明：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;数据库几乎均以id作为主键，并引用为其他表的外键。主要是考虑到表之间的引用关系以及数据重复，所以直接以id作为外键，当需要引用其他表数据时，使用id检索可以得到全部信息&lt;/li&gt;
  &lt;li&gt;order_item里面的age_of_children是包含0至多个年龄的字符串，考虑到可能有多个小孩&lt;/li&gt;
  &lt;li&gt;对于每个room来讲，都会有一系列的avaliable_date（比如接下来一周内的avaliable date），unavaliable就是没存在数据库当中的日期，所以avaliable date单独做表，但这样可能会造成一些数据冗余，应该有更好的设计&lt;/li&gt;
  &lt;li&gt;location中的type标识是City、Town还是Region，isCapital表示是否为首都。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;脚本如下：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;-- MySQL Script generated by MySQL Workbench&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;-- Tue May  1 22:23:09 2018&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;-- Model: New Model    Version: 1.0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;-- MySQL Workbench Forward Engineering&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OLD_UNIQUE_CHECKS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=@@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UNIQUE_CHECKS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UNIQUE_CHECKS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OLD_FOREIGN_KEY_CHECKS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=@@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FOREIGN_KEY_CHECKS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FOREIGN_KEY_CHECKS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OLD_SQL_MODE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=@@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SQL_MODE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SQL_MODE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'TRADITIONAL,ALLOW_INVALID_DATES'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;-- -----------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;-- Schema mydb&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;-- -----------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;-- -----------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;-- Schema lesson7&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;-- -----------------------------------------------------&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;-- -----------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;-- Schema lesson7&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;-- -----------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SCHEMA&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;EXISTS&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`lesson7`&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CHARACTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;utf8&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;USE&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`lesson7`&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;-- -----------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;-- Table `lesson7`.`location`&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;-- -----------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;EXISTS&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`lesson7`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`location`&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`id`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`code`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VARCHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;45&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`name`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VARCHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;45&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`hot`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`isCapital`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`type`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;PRIMARY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;KEY&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`id`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ENGINE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InnoDB&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CHARACTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;utf8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;


&lt;span class=&quot;c1&quot;&gt;-- -----------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;-- Table `lesson7`.`hotel`&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;-- -----------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;EXISTS&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`lesson7`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`hotel`&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`id`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`name`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VARCHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;45&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`description`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TEXT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`star_index`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`hot_index`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`address`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VARCHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;45&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`location_id`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;PRIMARY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;KEY&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`id`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;INDEX&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`lo_idx`&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`location_id`&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ASC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;CONSTRAINT&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`lo`&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;FOREIGN&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;KEY&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`location_id`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;REFERENCES&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`lesson7`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`location`&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`id`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ACTION&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;UPDATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ACTION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ENGINE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InnoDB&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CHARACTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;utf8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;


&lt;span class=&quot;c1&quot;&gt;-- -----------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;-- Table `lesson7`.`room_desc`&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;-- -----------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;EXISTS&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`lesson7`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`room_desc`&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`id`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`type`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VARCHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;45&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`list_price`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VARCHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;45&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;PRIMARY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;KEY&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`type`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ENGINE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InnoDB&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CHARACTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;utf8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;


&lt;span class=&quot;c1&quot;&gt;-- -----------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;-- Table `lesson7`.`room`&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;-- -----------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;EXISTS&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`lesson7`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`room`&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`id`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`number`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VARCHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;45&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`room_type`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VARCHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;45&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`hotel_id`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;PRIMARY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;KEY&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`id`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;INDEX&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`type_idx`&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`room_type`&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ASC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;INDEX&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`id_idx`&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`hotel_id`&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ASC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;CONSTRAINT&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`id`&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;FOREIGN&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;KEY&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`hotel_id`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;REFERENCES&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`lesson7`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`hotel`&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`id`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ACTION&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;UPDATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ACTION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;CONSTRAINT&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`typeCon`&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;FOREIGN&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;KEY&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`room_type`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;REFERENCES&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`lesson7`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`room_desc`&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`type`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ACTION&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;UPDATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ACTION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ENGINE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InnoDB&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CHARACTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;utf8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;


&lt;span class=&quot;c1&quot;&gt;-- -----------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;-- Table `lesson7`.`avaliable_date`&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;-- -----------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;EXISTS&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`lesson7`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`avaliable_date`&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`id`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`room_id`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`date`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VARCHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;45&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;PRIMARY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;KEY&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`id`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;INDEX&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`a_idx`&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`room_id`&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ASC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;CONSTRAINT&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`a`&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;FOREIGN&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;KEY&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`room_id`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;REFERENCES&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`lesson7`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`room`&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`id`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ACTION&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;UPDATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ACTION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ENGINE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InnoDB&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CHARACTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;utf8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;


&lt;span class=&quot;c1&quot;&gt;-- -----------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;-- Table `lesson7`.`reservation`&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;-- -----------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;EXISTS&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`lesson7`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`reservation`&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`id`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`total`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VARCHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;45&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`check_in`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VARCHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;45&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`check_out`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VARCHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;45&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`customer_name`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VARCHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;45&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`customer_email`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VARCHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;45&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`customer_gender`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VARCHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;45&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`customer_is_smoke`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VARCHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;45&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`customer_special_requirements`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VARCHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;45&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;PRIMARY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;KEY&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`id`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ENGINE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InnoDB&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CHARACTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;utf8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;


&lt;span class=&quot;c1&quot;&gt;-- -----------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;-- Table `lesson7`.`order_item`&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;-- -----------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;EXISTS&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`lesson7`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`order_item`&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`id`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`number_of_adults`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VARCHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;45&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`number_of_children`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VARCHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;45&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`age_of_children`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VARCHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;45&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`room_id`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`reservation_id`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`order_itemcol`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VARCHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;45&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;PRIMARY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;KEY&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`id`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;INDEX&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`rooid_idx`&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`room_id`&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ASC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;INDEX&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`resid_idx`&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`reservation_id`&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ASC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;CONSTRAINT&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`resid`&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;FOREIGN&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;KEY&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`reservation_id`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;REFERENCES&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`lesson7`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`reservation`&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`id`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ACTION&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;UPDATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ACTION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;CONSTRAINT&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`rooid`&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;FOREIGN&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;KEY&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`room_id`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;REFERENCES&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`lesson7`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`room`&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`id`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ACTION&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;UPDATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ACTION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ENGINE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InnoDB&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CHARACTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;utf8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SQL_MODE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OLD_SQL_MODE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FOREIGN_KEY_CHECKS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OLD_FOREIGN_KEY_CHECKS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UNIQUE_CHECKS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OLD_UNIQUE_CHECKS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;数据库逻辑模型与领域模型的异同&quot;&gt;数据库逻辑模型与领域模型的异同：&lt;/h3&gt;

&lt;h4 id=&quot;同&quot;&gt;同：&lt;/h4&gt;

&lt;p&gt;都是类的抽象，描述了不同实体，和不同实体之间的关系。&lt;/p&gt;

&lt;h4 id=&quot;异&quot;&gt;异：&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;领域模型用来梳理业务逻辑，识别实际存在的数据实体和逻辑上存在关系的实体。领域模型是面向对象的高层次模型，关注用例建模，关注对象行为，是一个概念的描述，属性不涉及具体类型和实现。&lt;/li&gt;
  &lt;li&gt;数据库逻辑模型只识别数据实体，关注数据建模，涉及到数据库的具体实现和属性的具体类型。&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 01 May 2018 09:54:22 +0800</pubDate>
        <link>http://localhost:8080/2018/05/01/Lesson7/</link>
        <guid isPermaLink="true">http://localhost:8080/2018/05/01/Lesson7/</guid>
        
        <category>系分作业</category>
        
        
      </item>
    
      <item>
        <title>系分 Lesson6</title>
        <description>&lt;h2 id=&quot;lesson-6&quot;&gt;lesson 6&lt;/h2&gt;

&lt;h3 id=&quot;用例建模&quot;&gt;用例建模&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;a. 阅读 Asg_RH 文档，绘制用例图。 按 Task1 要求，请使用工具 UMLet，截图格式务必是 png 并控制尺寸&lt;/li&gt;
  &lt;li&gt;b. 选择你熟悉的定旅馆在线服务系统（或移动 APP），如绘制用例图。并满足以下要求：
- 对比 Asg_RH 用例图，请用色彩标注出创新用例或子用例
- 尽可能识别外部系统，并用色彩标注新的外部系统和服务&lt;/li&gt;
  &lt;li&gt;c. 对比两个时代、不同地区产品的用例图，总结在项目早期，发现创新的思路与方法&lt;/li&gt;
  &lt;li&gt;d. 请使用 SCRUM 方法，在（任务b）用例图基础上，编制某定旅馆开发的需求 （backlog）&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;a&quot;&gt;a.&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/system-analysis/lesson6/asg_usecase.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;b&quot;&gt;b.&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/system-analysis/lesson6/qunaer_usecase.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;c&quot;&gt;c.&lt;/h4&gt;

&lt;p&gt;去哪儿网站的预订机制显然比ash的预订案例更加人性化、满足更多需求。&lt;/p&gt;

&lt;p&gt;在项目前期，个人认为比较有利于发现创新思路的方法有以下部分：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;进行详细的业务调研，将项目设计的业务流程弄清楚，加以整理；&lt;/li&gt;
  &lt;li&gt;从业务流程开始，保留必须的业务选项，剔除冗杂无效益的选项；&lt;/li&gt;
  &lt;li&gt;从现有的业务流程开始，优化流程中非人性化的部分，提高用户体验；&lt;/li&gt;
  &lt;li&gt;时刻接收用户的反馈，完善项目设计；&lt;/li&gt;
  &lt;li&gt;在现有业务基础上，吸收其他行业或技术的案例，以此优化当前业务&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;d&quot;&gt;d.&lt;/h4&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;ID&lt;/th&gt;
      &lt;th&gt;需求名称&lt;/th&gt;
      &lt;th&gt;重要性&lt;/th&gt;
      &lt;th&gt;工作量&lt;/th&gt;
      &lt;th&gt;需求目标&lt;/th&gt;
      &lt;th&gt;注意事项&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;搜索酒店&lt;/td&gt;
      &lt;td&gt;80&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;可以通过关键字以及日期和城市名称进行酒店搜索&lt;/td&gt;
      &lt;td&gt;要考虑根据输入的信息进行酒店优先级排序&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;预定酒店&lt;/td&gt;
      &lt;td&gt;90&lt;/td&gt;
      &lt;td&gt;25&lt;/td&gt;
      &lt;td&gt;可以查看酒店详情以及可以根据日期预定房间&lt;/td&gt;
      &lt;td&gt;要考虑房间容量以及空闲情况&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;确认订单&lt;/td&gt;
      &lt;td&gt;90&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;可以修改房间以及酒店的预定信息，如时间房间号等等&lt;/td&gt;
      &lt;td&gt;可以查看订单性情&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;支付订单&lt;/td&gt;
      &lt;td&gt;95&lt;/td&gt;
      &lt;td&gt;20&lt;/td&gt;
      &lt;td&gt;可以选择不同的支付方式进行支付订单&lt;/td&gt;
      &lt;td&gt;1.使用外部系统支付，确保安全性；2.注意支付异常反馈；3. 用户信息必须准确无误，可返回上一级修改&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;酒店排序&lt;/td&gt;
      &lt;td&gt;75&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;可以通过价格、星级等排序酒店优先级&lt;/td&gt;
      &lt;td&gt;排序项有限&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;评论&lt;/td&gt;
      &lt;td&gt;80&lt;/td&gt;
      &lt;td&gt;12&lt;/td&gt;
      &lt;td&gt;可以在完成入住后发表评论&lt;/td&gt;
      &lt;td&gt;发表评论仅限在入住后，否则不予评价；评价项包括服务评价、星级评价以及意见等等。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;业务建模&quot;&gt;业务建模&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;a. 在（任务b）基础上，用活动图建模找酒店用例。简述利用流程图发现子用例的方法。&lt;/li&gt;
  &lt;li&gt;b. 选择你身边的银行 ATM，用活动图描绘取款业务流程&lt;/li&gt;
  &lt;li&gt;c. 查找淘宝退货业务官方文档，使用多泳道图，表达客户、淘宝网、淘宝商家服务系统、商家等用户和系统协同完成退货业务的过程。分析客户要完成退货业务，在淘宝网上需要实现哪些系统用例&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;a-1&quot;&gt;a.&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/system-analysis/lesson6/6-2-1.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;b-1&quot;&gt;b.&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/system-analysis/lesson6/6-2-2.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;c-1&quot;&gt;c.&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/system-analysis/lesson6/6-2-3.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;用例文本&quot;&gt;用例文本&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;摘要：简洁的一段式概要，通常用于主成功场景。
    &lt;ul&gt;
      &lt;li&gt;优点：在早起需求分析过程中，可以快速地了解主题和范围&lt;/li&gt;
      &lt;li&gt;缺点：过于简单，难以详细描述场景&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;非正式：用几个段落覆盖不同场景
    &lt;ul&gt;
      &lt;li&gt;优点：可以快速地了解主题和范围，比摘要用例文本详细，进一步认识问题。&lt;/li&gt;
      &lt;li&gt;缺点：仍然难以说明白场景，不够正式。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;详述：详细编写所有步骤及各种变化，同时具有补充部分
    &lt;ul&gt;
      &lt;li&gt;优点：确认并以摘要形式编写了大量用例后，可以详细地编写少量的具有架构意义和高价值的用例。优点是细节充足，正式且深入，具有结构性。&lt;/li&gt;
      &lt;li&gt;缺点：内容过于详细，编写耗时长，比较繁琐，不太适用于一些简单场景。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Sun, 22 Apr 2018 09:54:22 +0800</pubDate>
        <link>http://localhost:8080/2018/04/22/lesson6/</link>
        <guid isPermaLink="true">http://localhost:8080/2018/04/22/lesson6/</guid>
        
        <category>系分作业</category>
        
        
      </item>
    
      <item>
        <title>前后端分离</title>
        <description>&lt;h2 id=&quot;前后端分离&quot;&gt;前后端分离&lt;/h2&gt;

&lt;h4 id=&quot;什么是前后端分离&quot;&gt;什么是前后端分离&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;前后端分离，顾名思义，直接的想法是：前端处理视图层的显示、逻辑等等与用户交互的开发环节，后端处理用户交互产生的响应和数据处理这个开发环节。用MVC模型来说，就是前端负责View和Controller层，后端负责Model层，业务处理\数据。&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- more --&gt;

&lt;h4 id=&quot;为什么要使用前后端分离呢&quot;&gt;为什么要使用前后端分离呢？&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;首先是使用场景问题。AJAX迎来的SPA时代，这种单页刷新应用要求比较高的性能，而前后端分离，在开发层面，能够极大提高开发效率，降低开发成本和前后端耦合度，降低整体代码的复杂程度，这无疑是程序员的福音。对用户而言，前后端分离能够提高用户体验，更加友好，网页加载速度也能提高。由此看来，前后端分离真是一举两得，创世之举啊！实际上，就开发层面，前后端的意义十分重大。&lt;/li&gt;
  &lt;li&gt;web1.0时代，开发人员大多是3-5人做一个小型的应用开发，那个时候互联网也不是很普及，一个小型应用需要的服务，不像目前那么复杂。到后来，网站逐渐兴起，用户一朵，services请求、数据量激增，不可能单纯依靠原来的网站去满足这样的需求了，网页的制作、变革、性能也进入瓶颈。而对开发人员来说，沉重的开发任务，如果不提高效率，那就是坐以待毙。所以，随着ajax、angularJS、REST、nodejs等框架和模型的兴起，前后端分离的开发方式受到青睐。&lt;/li&gt;
  &lt;li&gt;另外，对于现今的时代，前后端已经出现了比较大的分化和不同，尽管全栈工程师有很多，但前后端仍然是一个各自占了一个大头。而假设我们采用前端、后端这样的工作模式，必然会考虑到一个问题，如果说前端必须依赖后端处理请求，那么前端在开发时期就必须等到后端完成了才能调试，无法做到前后端独立，这种开发肯定是很让人头疼的。那有没有一种方法可以方便我前后端的独立开发、协调合作呢？那就是找一个中间载体：Server.根据接口构建一个Server。前端开发期间，向这个Server发送请求，而不是直接向后端发送请求，这样，前端无需依赖后端开发。前端有模拟数据可以调试，等到前后端都开发完成了，再改下配置，前后端连接调试就行了。&lt;/li&gt;
  &lt;li&gt;讲到这里，我们也可以大概总结一下前后端分离的优点。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;前后端分离的优点&quot;&gt;前后端分离的优点:&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;前后端分离的最终目的是提高工作效率。&lt;/li&gt;
  &lt;li&gt;前后端分离的优势:
    &lt;ol&gt;
      &lt;li&gt;彻底解放前端。&lt;/li&gt;
      &lt;li&gt;提高工作效率，分工更加明确。&lt;/li&gt;
      &lt;li&gt;局部性能提升。&lt;/li&gt;
      &lt;li&gt;降低维护成本。&lt;/li&gt;
      &lt;li&gt;易于前后端进行前期测试&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;开发步骤&quot;&gt;开发步骤&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;根据功能制定前后端接口&lt;/li&gt;
  &lt;li&gt;根据接口设立Mock server（中间服务器）及部署&lt;/li&gt;
  &lt;li&gt;前后端独立开发，前端获得服务器模拟数据调试&lt;/li&gt;
  &lt;li&gt;前后端开发完毕，前后端连接调试（前端修改配置，向后端发送请求而不是Mock Server）&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 15 Apr 2018 09:54:22 +0800</pubDate>
        <link>http://localhost:8080/2018/04/15/separate-front-and-rear-ends/</link>
        <guid isPermaLink="true">http://localhost:8080/2018/04/15/separate-front-and-rear-ends/</guid>
        
        <category>前端</category>
        
        
      </item>
    
      <item>
        <title>Restful api 设计原则</title>
        <description>&lt;p&gt;##Restful api设计原则&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;在Restful API设计原则中，每个网页代表一种资源，所有网址中不能有动词，只能是名词。&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- more --&gt;

&lt;ul&gt;
  &lt;li&gt;通信协议为HTTPs协议&lt;/li&gt;
  &lt;li&gt;API应部署在专用域名下，如果简单，可以考虑放在主域名下。&lt;/li&gt;
  &lt;li&gt;API的版本号放入URL中&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;资源的操作类型有以下几种http动词&quot;&gt;资源的操作类型有以下几种（HTTP动词）&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;GET（SELECT）：从服务器取出资源（一项或多项）&lt;/li&gt;
  &lt;li&gt;POST（CREATE）：在服务器新建一个资源。&lt;/li&gt;
  &lt;li&gt;PUT（UPDATE）：更新资源（客户端提供改变后的完整资源）&lt;/li&gt;
  &lt;li&gt;PATCH（UPDATE）：更新资源（客户端提供改变后的属性）&lt;/li&gt;
  &lt;li&gt;DELETE（DELETE）：删除资源。&lt;/li&gt;
  &lt;li&gt;HEAD：获取资源元数据（不常用）&lt;/li&gt;
  &lt;li&gt;OPTIONS：获取信息，关于资源的哪些属性是客户端可以改变的。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;过滤信息&quot;&gt;过滤信息&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;如果记录的数据很多，服务器不可能全部返回给用户，API要提供参数过滤返回结果。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;常见参数如下：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;?limit=10：指定返回记录的数量 

?offset=10：指定返回记录的开始位置. 

?page=2&amp;amp;per_page=100：指定第几页，以及每页的记录数。 

?sortby=name&amp;amp;order=asc：指定返回结果按照哪个属性排序，以及排序顺序。 

?animal_type_id=1：指定筛选条件
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;状态码&quot;&gt;状态码&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;200 OK - [GET]：服务器成功返回用户请求的数据，该操作是幂等的（Idempotent）。
201 CREATED - [POST/PUT/PATCH]：用户新建或修改数据成功。
202 Accepted - [*]：表示一个请求已经进入后台排队（异步任务）
204 NO CONTENT - [DELETE]：用户删除数据成功。
400 INVALID REQUEST - [POST/PUT/PATCH]：用户发出的请求有错误，服务器没有进行新建或修改数据的操作，该操作是幂等的。
401 Unauthorized - [*]：表示用户没有权限（令牌、用户名、密码错误）。
403 Forbidden - [*] 表示用户得到授权（与401错误相对），但是访问是被禁止的。
404 NOT FOUND - [*]：用户发出的请求针对的是不存在的记录，服务器没有进行操作，该操作是幂等的。
406 Not Acceptable - [GET]：用户请求的格式不可得（比如用户请求JSON格式，但是只有XML格式）。
410 Gone -[GET]：用户请求的资源被永久删除，且不会再得到的。
422 Unprocesable entity - [POST/PUT/PATCH] 当创建一个对象时，发生一个验证错误。
500 INTERNAL SERVER ERROR - [*]：服务器发生错误，用户将无法判断发出的请求是否成功。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;详细列表请见&lt;a href=&quot;https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html&quot;&gt;这里&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;错误处理&quot;&gt;错误处理&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;状态码是4xx&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{
  error: &quot;Invalid API key&quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;hypermedia-api&quot;&gt;Hypermedia API&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;在返回结果中提供链接&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{&quot;link&quot;: {
  &quot;rel&quot;:   &quot;collection https://www.example.com/zoos&quot;,
  &quot;href&quot;:  &quot;https://api.example.com/zoos&quot;,
  &quot;title&quot;: &quot;List of zoos&quot;,
  &quot;type&quot;:  &quot;application/vnd.yourformat+json&quot;
}}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;其他&quot;&gt;其他&lt;/h4&gt;

&lt;p&gt;API的身份认证应该使用OAuth2.0框架 
服务器返回的数据格式尽量用JSON，避免XML&lt;/p&gt;
</description>
        <pubDate>Sun, 15 Apr 2018 09:54:22 +0800</pubDate>
        <link>http://localhost:8080/2018/04/15/Restful-API%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/</link>
        <guid isPermaLink="true">http://localhost:8080/2018/04/15/Restful-API%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/</guid>
        
        <category>前端</category>
        
        
      </item>
    
      <item>
        <title>Js 笔记</title>
        <description>&lt;h2 id=&quot;ecmascript6学习笔记&quot;&gt;ECMAScript6学习笔记&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;let and var&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;两者都用来声明变量，let声明的变量，尽在代码作用域内有效。所以使用for循环时用let简单方便。&lt;/li&gt;
    &lt;/ul&gt;

    &lt;!-- more --&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;涉及闭包的一个例子，使用let时，由于声明变量尽在代码作用块内有效，所以不会用let声明时不会出现因为引用导致的赋值错误情况。“一个闭包不能实现，就用两个闭包”。如下&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;function ninja() { 
  for (let i = 0; i &amp;lt; 10; i++) { 
	  a[i] = function() { console.log(i); }; 
  }
} 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;暂时性死区：let是无法先使用再声明的。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;块级作用域&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;函数可在块级作用域内声明。&lt;/li&gt;
      &lt;li&gt;do表达式：使块级作用域可以返回值&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;const命令&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;声明不可改变的常量，必须立即初始化。&lt;/li&gt;
      &lt;li&gt;存在暂时性死区。&lt;/li&gt;
      &lt;li&gt;本质是指向变量的内存地址不可改变。当遇到数组或对象时，指向的是首地址，所以可以改变数组和对象里的内容，但不可改变其指向另一个。。&lt;/li&gt;
      &lt;li&gt;如果真不想给对象添加属性，将对象冻结-》Object.freeze方法。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;顶层对象和全局对象&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;let、const、class声明的全局对象，和顶层对象是分开的&lt;/li&gt;
      &lt;li&gt;System.global在各种环境中都可以取到顶层对象。&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;import getGlobal from 'system.global'; const global =getGlobal();&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;using-function&quot;&gt;Using Function&lt;/h3&gt;

&lt;h4 id=&quot;anonymous-function&quot;&gt;Anonymous function:&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Reference losing:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var ninja = {
  show: function() { console.log(&quot;class it&quot;); }
}

var samurai = {
  show: ninja.show;
}

ninja = {};
try {
  assert(samurai.show(), &quot;Is this going to work?&quot;);
}

catch(e) {
  assert(false, &quot;Uh, this isn't good!&quot;);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;To solve the problem of reference losing, a inline function is used.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Function as object&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;Memorizing&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;function isPrime(value) {
  if (!isprime.answers) isPrime.answers = {};
  if (isprime.answers[value] != null) {
    return isPrime.answers[value];
  }
  var prime = value != 1;
  for (var i = 2; i &amp;lt; value; i++) {
    if (value % i == 0) {
      isPrime.answers[value] = false;
      break;
    }
  }
  return isPrime.answers[value] = prime;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Use call/apply method to cheat the function so that creat a efficient way to use other methods. Like this:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Array.prototype.push.call(arg);
// arg is not a array. But in this way it acts like an array;
method.apply();
Array.prototype.slice.call(arg, 1);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Override function&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;addMethod()&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;addMethod(ninjas, &quot;find&quot;, function() { return this.values; });

addMethod(ninjas, &quot;find&quot;, function() {
  var net = [];
  for (var i = 0; i &amp;lt; this.values.length; i++) {
    if (this.values[i].indexOf(name == 0)
      net.push(this.values[i]);
  }
  return net;
});

addMethod(ninjas, &quot;find&quot;, function() {
   var net = [];
   for (var i =0; i &amp;lt; this.values.length; i++) {
     if (this.values[i] == (first + &quot; &quot; + last))
       ret.push(this.values[i]);
   }
   return net;
})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;函数判断&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;A common way (can used in IE)&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;function isFunction(fn) {
  return Object.prototype.toString.call(fn) === &quot;[object Function]&quot;;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;closure&quot;&gt;Closure&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;bind : 绑定上下文&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Function.prototype.bind = function() {
  var fn = this,
  args = Array.prototype.slice.call(arguments),
  object = args.shift();
  return function() {
	return fn.apply(object, args.concat(Array.prototype.slice.call(arguments)));
  };
};

var myObject = {};

function myFunction() {
  return this == myObejct;
}

assert( !myFunction(), &quot;Context is not set yet&quot;);
var aFunction = myFunction.bind(myObject);
assert( aFunction(), &quot;Context is set properly&quot;);
// In chrome, assert is used by console.assert;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;偏应用函数: Currying: 有预处理参数的函数&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Function.prototype.curry = function() {
  var fn = this;
  args = Array.prototype.slice.call(arguments);
  return function() {
    return fn.apply(this, args.concat( Array.prototype.slice.call(arguments)));
  }
}
Function.prototype.partial = function() {
  var fn = this, args = Array.prototype.slice.call(arguments);
  return function() {
    var arg = 0;
    for (var i = 0; i &amp;lt; args.length &amp;amp;&amp;amp; arg &amp;lt; arguments.length; i++) {
       if (args[i] === undefined) {
         args[i] = arguments[arg++];
       }
    }
    return fn.apply(this, args);
  };
};
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Memorzing (Closure)&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Function.prototype.memoized = function(key) {
  this.values = this.values || {};
  return this._values[key] !== undefined ? this._values[key] : this._values[key] = this.apply(this, arguments);
};

Function.prototype.memorize = function() {
  var fn = this;
  return function() {
      return fn.memorized.apply( fn, arguments);
  };
};

var isPrime = (function(num) {
  var prime = num != 1;
  for (var i = 2; i &amp;lt; num; i++) {
      if (num % i == 0) {
          prime = false;
          break;
      }
  }
  return prime;
}).memorize(); 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;包里的变量引用问题&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;function ninja() {
  var divs = $(&quot;div&quot;);
  for (var i = 0; i &amp;lt; 10; i++) {
    divs[i].addEventListener(&quot;click&quot;, functon() { alert(&quot;divs #&quot; + i + &quot; was clicked.&quot;)}, false);
  }
}
// As a result, i will always be 10;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;// Use like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;function ninja() {
  var divs = $(&quot;div&quot;);
  for (var i = 0; i &amp;lt; 10; i++) (function(n) {
    div[n].addEventListener(&quot;click&quot;, function() alert(&quot;div #&quot; + n + &quot; was clicked.&quot;); }, false); })(i);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Sun, 15 Apr 2018 09:54:22 +0800</pubDate>
        <link>http://localhost:8080/2018/04/15/Js%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
        <guid isPermaLink="true">http://localhost:8080/2018/04/15/Js%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
        
        <category>前端</category>
        
        
      </item>
    
      <item>
        <title>CSS HTML布局笔记</title>
        <description>&lt;h1 id=&quot;html-css-布局笔记&quot;&gt;HTML CSS 布局笔记&lt;/h1&gt;

&lt;h2 id=&quot;块级元素-内联元素&quot;&gt;块级元素 内联元素&lt;/h2&gt;

&lt;p&gt;内联元素的高度由内容撑开，对height不敏感&lt;/p&gt;

&lt;p&gt;行内元素对定位top/right/bottom/left、宽高width/height、外边距margin不敏感，对边框和内边距敏感。&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h2 id=&quot;定位&quot;&gt;定位&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;相对定位，不脱离文档流，文档流中的位置还是保留，只是改变了表现&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;绝对定位脱离文档流，不保留位置，相对于距离最近的非Static元素位置决定，可以覆盖其他元素&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;固定定位也不包含在文档流中&lt;/li&gt;
  &lt;li&gt;父子节点没有脱离文档流的定位，外边距会合并，以最大的边距为主&lt;/li&gt;
  &lt;li&gt;说道这里对于外边距margin：块级元素的垂直相邻外边距会合并，而行内元素实际上不占上下外边距。行内元素的的左右外边距不会合并。同样地，浮动元素的外边距也不会合并。允许指定负的外边距值，不过使用时要小心。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;absolute定位结果分两种情况来考虑：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;第一种，元素的某条边没有设置定位属性（left/top/right/bottom）的时候(默认值为auto)，这一边就会将absolute块（包括外边距）按流式布局来排列（如实验1结果所示），当然这个流式布局就会受到内边距padding的影响了。&lt;/li&gt;
  &lt;li&gt;第二种，元素的某条边设置了定位属性（left/top/right/bottom）的时候(默认值是auto)，这一边就会被作为脱离文档流的边来处理，会相对于 static 定位以外的第一个父元素（的边框）进行定位，如果这时候设置了外边距，那么这一边相对于基准元素的偏移=定位值（left/top/right/bottom）+ 外边距。效果如实验2所示。作为脱离文档流来处理的边是基于那个基准元素的边框来定位的，当然不受内边距padding的影响。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;浮动&quot;&gt;浮动&lt;/h2&gt;

&lt;p&gt;脱离文档流中&lt;/p&gt;

&lt;p&gt;如果都设置为浮动，按照宽度会集中显示在一行，如果宽度不够，再开一行&lt;/p&gt;

&lt;p&gt;如果高度不同，可能造成“卡住”的现象&lt;/p&gt;

&lt;p&gt;浮动元素后面的非浮动元素会忽略浮动元素的存在照上排列（如果没用clear both），但后面的浮动元素里的文本内容会受到影响&lt;/p&gt;

&lt;p&gt;###对于浮动与定位的位置优先级&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;(fixed == absolute) &amp;gt; float &amp;gt; relative &amp;gt; static&lt;/li&gt;
  &lt;li&gt;理解为同时设置了position:absolute和float:right。忽略float:right。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;###堆叠优先级&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;定位元素z-index&amp;gt;=0时，
    &lt;ul&gt;
      &lt;li&gt;(fixed == absolute == relative)  &amp;gt; static&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;z-index &amp;lt; 0时
    &lt;ul&gt;
      &lt;li&gt;(fixed == absolute == relative)  &amp;lt; static&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;理解为兄弟元素一个设置了position：relative,另一个设置了position:static，当relative元素z-index为&amp;gt;=0时，无论static元素设置多少都在relative下面。如果relative设置z-index&amp;lt;0,则论static取什么值relative都会在static下面。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;定位元素z-index&amp;gt;=0时
    &lt;ul&gt;
      &lt;li&gt;(fixed == absolute == relative)  &amp;gt; float&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;z-index &amp;lt; 0时
    &lt;ul&gt;
      &lt;li&gt;(fixed == absolute == relative)  &amp;lt; float&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;理解为兄弟元素一个设置了position：relative,另一个设置了float:left，当relative元素z-index为&amp;gt;=0时，无论float元素设置多少都在relative下面。如果relative设置z-index&amp;lt;0,则无论float的z-index设置多少relative都会在float下面。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;float &amp;gt; static始终成立。因为z-index只有在定位元素上才起作用，定位元素包括fixed、absolute、relative。&lt;/li&gt;
  &lt;li&gt;fixed == absolute == relative，比较堆叠顺序直接比较z-index大小即可。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;参考自&lt;/p&gt;

&lt;p&gt;http://www.cnblogs.com/dolphinX/archive/2012/10/13/2722501.html&lt;/p&gt;

&lt;p&gt;http://www.cnblogs.com/chuaWeb/p/html_css_position_float.html&lt;/p&gt;
</description>
        <pubDate>Sun, 15 Apr 2018 09:54:22 +0800</pubDate>
        <link>http://localhost:8080/2018/04/15/HTML-CSS-%E5%B8%83%E5%B1%80%E7%AC%94%E8%AE%B0/</link>
        <guid isPermaLink="true">http://localhost:8080/2018/04/15/HTML-CSS-%E5%B8%83%E5%B1%80%E7%AC%94%E8%AE%B0/</guid>
        
        <category>前端</category>
        
        
      </item>
    
      <item>
        <title>系分 Homework 2</title>
        <description>&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;学号&lt;/th&gt;
      &lt;th&gt;15331407&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;姓名&lt;/td&gt;
      &lt;td&gt;张应鸿&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&quot;简答题&quot;&gt;简答题&lt;/h1&gt;

&lt;h3 id=&quot;简述瀑布模型增量模型螺旋模型含原型方法的优缺点&quot;&gt;简述瀑布模型、增量模型、螺旋模型（含原型方法）的优缺点。&lt;/h3&gt;

&lt;h4 id=&quot;1-瀑布模型&quot;&gt;1. 瀑布模型&lt;/h4&gt;

&lt;p&gt;优点&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;为项目提供了按阶段划分的检查点。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;当前一阶段完成后，您只需要去关注后续阶段。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;可在&lt;a href=&quot;https://baike.baidu.com/item/%E8%BF%AD%E4%BB%A3%E6%A8%A1%E5%9E%8B&quot;&gt;迭代模型&lt;/a&gt;中应用瀑布模型。&lt;/p&gt;

    &lt;p&gt;增量迭代应用于瀑布模型。迭代1解决最大的问题。每次迭代产生一个可运行的版本,同时增加更多的功能。每次迭代必须经过质量和&lt;a href=&quot;https://baike.baidu.com/item/%E9%9B%86%E6%88%90%E6%B5%8B%E8%AF%95&quot;&gt;集成测试&lt;/a&gt;。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;它提供了一个模板，这个模板使得分析、设计、编码、测试和支持的方法可以在该模板下有一个共同的指导。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;缺点&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;各个阶段的划分完全固定，阶段之间产生大量的文档，极大地增加了工作量。&lt;/li&gt;
  &lt;li&gt;由于开发模型是线性的，用户只有等到整个过程的末期才能见到开发成果，从而增加了开发风险。&lt;/li&gt;
  &lt;li&gt;通过过多的强制完成日期和里程碑来跟踪各个项目阶段。&lt;/li&gt;
  &lt;li&gt;瀑布模型的突出缺点是不适应用户需求的变化。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;2增量模型&quot;&gt;2.增量模型&lt;/h4&gt;

&lt;p&gt;优点&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;将待开发的软件系统模块化，可以分批次地提交软件产品，使用户可以及时了解软件项目的进展。&lt;/li&gt;
  &lt;li&gt;以组件为单位进行开发降低了&lt;a href=&quot;https://baike.baidu.com/item/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91&quot;&gt;软件开发&lt;/a&gt;的风险。一个开发周期内的错误不会影响到整个软件系统。&lt;/li&gt;
  &lt;li&gt;开发顺序灵活。开发人员可以对组件的实现顺序进行优先级排序，先完成需求稳定的核心组件。当组件的优先级发生变化时，还能及时地对实现顺序进行调整。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;缺点&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;增量模型的缺点是要求待开发的软件系统可以被模块化。如果待开发的软件系统很难被模块化，那么将会给增量开发带来很多麻烦。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;3螺旋模型含原型方法&quot;&gt;3.螺旋模型（含原型方法）&lt;/h4&gt;

&lt;p&gt;优点&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;通过原型的创建，使软件开发在每个迭代的最初明确方向；&lt;/li&gt;
  &lt;li&gt;通过风险分析，最大程度地降低软件彻底失败造成损失的可能性；&lt;/li&gt;
  &lt;li&gt;在每个迭代阶段植入软件测试，使每个阶段的质量得到保证；&lt;/li&gt;
  &lt;li&gt;整体过程具备很高的灵活性，在开发过程的任何阶段自由应对变化；&lt;/li&gt;
  &lt;li&gt;每个迭代阶段累计开发成本，使支出状况容易掌握；&lt;/li&gt;
  &lt;li&gt;通过对用户反馈的采集，与用户沟通，以保证用户需求的最大实现；&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;缺点&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;过分依赖风险分析经验与技术，一旦在风险分析过程中出现偏差将造成重大损失；&lt;/li&gt;
  &lt;li&gt;过于灵活的开发过程不利于已经签署合同的客户与开发者之间的协调；&lt;/li&gt;
  &lt;li&gt;由于只适用大型软件，过大的风险管理支出会影响客户的最终收益；&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;简述-up-的三大特点其中哪些内容体现了用户驱动的开发哪些内容体现风险驱动的开发&quot;&gt;简述 UP 的三大特点，其中哪些内容体现了用户驱动的开发，哪些内容体现风险驱动的开发？&lt;/h3&gt;

&lt;h4 id=&quot;up的三大特点&quot;&gt;UP的三大特点&lt;/h4&gt;

&lt;p&gt;① 软件开发是一个迭代过程&lt;/p&gt;

&lt;p&gt;② 软件开发是由Use Case驱动的&lt;/p&gt;

&lt;p&gt;③ 软件开发是以架构设计为中心的&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;①体现了风险驱动的开发  ② 和 ③ 体现了用户驱动的开发&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;up-四个阶段的划分准则是什么关键的里程碑是什么&quot;&gt;UP 四个阶段的划分准则是什么？关键的里程碑是什么？&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;初始阶段&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;　　初始阶段的目标是为系统建立商业案例并确定项目的边界。为了达到该目的必须识别所有与系统交互的外部实体，在较高层次上定义交互的特性。本阶段具有非常重要的意义，在这个阶段中所关注的是整个项目进行中的业务和需求方面的主要风险。对于建立在原有系统基础上的开发项目来讲，初始阶段可能很短。 初始阶段结束时是第一个重要的&lt;strong&gt;里程碑：生命周期目标(Lifecycle Objective)里程碑&lt;/strong&gt;。生命周期目标里程碑评价项目基本的生存能力。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;细化阶段&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;　　细化阶段的目标是分析问题领域，建立健全的体系结构基础，编制项目计划，淘汰项目中最高风险的元素。为了达到该目的，必须在理解整个系统的基础上，对体系结构作出决策，包括其范围、主要功能和诸如性能等非功能需求。同时为项目建立支持环境，包括创建开发案例，创建模板、准则并准备工具。 细化阶段结束时第二个重要的&lt;strong&gt;里程碑：生命周期结构(Lifecycle Architecture)里程碑&lt;/strong&gt;。生命周期结构里程碑为系统的结构建立了管理基准并使项目小组能够在构建阶段中进行衡量。此刻，要检验详细的系统目标和范围、结构的选择以及主要风险的解决方案。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;构造阶段&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;　　在构建阶段，所有剩余的构件和应用程序功能被开发并集成为产品，所有的功能被详细测试。从某种意义上说，构建阶段是一个制造过程，其重点放在管理资源及控制运作以优化成本、进度和质量。 构建阶段结束时是第三个重要的&lt;strong&gt;里程碑：初始功能(Initial Operational)里程碑&lt;/strong&gt;。初始功能里程碑决定了产品是否可以在测试环境中进行部署。此刻，要确定软件、环境、用户是否可以开始系统的运作。此时的产品版本也常被称为“beta”版。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;交付阶段&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;　　交付阶段的重点是确保软件对最终用户是可用的。交付阶段可以跨越几次迭代，包括为发布做准备的产品测试，基于用户反馈的少量的调整。在生命周期的这一点上，用户反馈应主要集中在产品调整，设置、安装和可用性问题，所有主要的结构问题应该已经在项目生命周期的早期阶段解决了。 在交付阶段的终点是第四个&lt;strong&gt;里程碑：产品发布(Product Release)里程碑&lt;/strong&gt;。此时，要确定目标是否实现，是否应该开始另一个开发周期。在一些情况下这个里程碑可能与下一个周期的初始阶段的结束重合。&lt;/p&gt;

&lt;h3 id=&quot;it-项目管理中工期质量范围内容-三个元素中在合同固定条件下为什么说范围内容是项目团队是易于控制的&quot;&gt;IT 项目管理中，“工期、质量、范围/内容” 三个元素中，在合同固定条件下，为什么说“范围/内容”是项目团队是易于控制的？&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;IT项目管理中，工期和质量是在合同中确定好的，不可随意更改。&lt;/li&gt;
  &lt;li&gt;IT项目管理中，为了更好地适应需求变更和项目进度，团队可适当改变范围/内容，所以范围/内容是团队易于控制的。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;为什么说up-为企业按固定节奏生产固定周期发布软件产品提供了依据&quot;&gt;为什么说，UP 为企业按固定节奏生产、固定周期发布软件产品提供了依据？&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;UP含有四个阶段，每个阶段结束于一个主要的里程碑，并且在每个阶段的结尾执行一次评估以确定这个阶段的目标是否已经满足，只有满足了才允许进入下一阶段。里程碑式的顺序生命周期，有利于企业按固定节奏生产。&lt;/li&gt;
  &lt;li&gt;UP采用迭代开发模式。一个迭代是一个完整的开发循环，产生一个可执行的产品版本，是最终产品的一个子集，它增量式地发展，从一个迭代过程到另一个迭代过程到成为最终的系统。这种开发模式保证了企业能够固定周期发布软件产品。&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;团队项目&quot;&gt;团队项目&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/system-analysis/homework2/kanban.png&quot; alt=&quot;kanban&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/system-analysis/homework2/cooperation.png&quot; alt=&quot;kanban&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/system-analysis/homework2/calendar.png&quot; alt=&quot;Cooperation&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 15 Apr 2018 09:54:22 +0800</pubDate>
        <link>http://localhost:8080/2018/04/15/homework2/</link>
        <guid isPermaLink="true">http://localhost:8080/2018/04/15/homework2/</guid>
        
        <category>系分作业</category>
        
        
      </item>
    
      <item>
        <title>系分 Homework 1</title>
        <description>&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;学号&lt;/th&gt;
      &lt;th&gt;15331407&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;姓名&lt;/td&gt;
      &lt;td&gt;张应鸿&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;简单题&quot;&gt;简单题&lt;/h2&gt;

&lt;h3 id=&quot;软件工程&quot;&gt;软件工程&lt;/h3&gt;

&lt;p&gt;将系统化的、规范的、可度量的方法用于软件的开发、运行和维护的过程，即将工程化应用于软件开发中。&lt;/p&gt;

&lt;p&gt;是指导计算机软件开发和维护的工程学科。 采用工程的概念、原理、技术和方法来开发与维护软件， 把经过实践考验而证明正确的管理技术和当前能够得到的最好的技术方法结合起来，这就是软件工程。&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;阅读经典名著人月神话等资料解释-software-crisiscocomo-模型&quot;&gt;阅读经典名著“人月神话”等资料，解释 software crisis、COCOMO 模型。&lt;/h3&gt;

&lt;h4 id=&quot;软件危机&quot;&gt;软件危机&lt;/h4&gt;

&lt;p&gt;是指在软件开发及维护的过程中所遇到的一系列严重问题，这些问题皆可能导致软件产品的寿命缩短、甚至夭折。上世纪60年代以来，随着计算机应用需求的驱动，系统软件和应用软件有很大的发展，软件生产的复杂性和高成本，使得大型软件的生产出现很大困难，由此引申出软件危机。&lt;/p&gt;

&lt;p&gt;软件开发是一项高难度、高风险的活动，由于它的高失败率，故有所谓“软件危机”之说。软件危机的本源是复杂、期望和改变。这个术语用来描述正急遽增加之电脑的力量带来的冲击和可能要处理的问题的复杂性。从本质上来说，它谈到了写出正确、可理解、可验证的计算机程序的困难。&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;cocomo模型&quot;&gt;COCOMO模型&lt;/h4&gt;

&lt;p&gt;Constructive Cost Model 最初发表于1981年巴里《软件工程经济学》一书中，做为一种在软件项中估算工作量、成本以及时间表的模型。该模型由三个不断深入和详细的层次组成。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;第一层，基本COCOMO，适用对软件开发进行快速、早期地对重要的方面进行粗略的成本估计，但因其缺少不同的项目属性（“成本驱动者”）的因素，所以准确性有一定的局限性。&lt;/li&gt;
  &lt;li&gt;第二层，中级COCOMO，考虑进了这些成本驱动者&lt;/li&gt;
  &lt;li&gt;第三层，详细COCOMO，加入了对不同软件开发阶段影响的考量&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;软件生命周期&quot;&gt;软件生命周期&lt;/h3&gt;

&lt;p&gt;软件生命周期指软件的产生直到成熟的全部过程。&lt;/p&gt;

&lt;p&gt;在早期，生命周期内有问题定义、可行性分析、总体描述、系统设计、编码、调试和测试、验收与运行、维护升级到废弃等阶段，这种按时间分程的思想方法是软件工程中的一种思想原则，即按部就班、逐步推进，每个阶段都要有定义、工作、审查、形成文档以供交流或备查，以提高软件的质量。这是受到了瀑布模型的影响。随着面向对象技术的成熟和其他生命周期模型的出现，这些生命周期设计方法的指导意义逐步减少。软件生命周期人们为开发更好的软件而归纳总结的软件生命周期的典型实践参考。在现代软件领域，软件生产有较大的复杂性和更高的要求，因而没有一定固定的、通用的设计方法，大多数情况下，是依据软件的各类要求，选择合适的软件生命周期设计方法进行开发。&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;按照-swebok-的-ka-划分本课程关注哪些-ka-或-知识领域&quot;&gt;按照 SWEBok 的 KA 划分，本课程关注哪些 KA 或 知识领域？&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Software requirements  软件需求&lt;/li&gt;
  &lt;li&gt;Software design  软件设计&lt;/li&gt;
  &lt;li&gt;Software construction  软件构造&lt;/li&gt;
  &lt;li&gt;Software testing  软件测试&lt;/li&gt;
  &lt;li&gt;Software maintenance  软件维护&lt;/li&gt;
  &lt;li&gt;Software configuration management  软件配置管理&lt;/li&gt;
  &lt;li&gt;Software engineering management  软件工程管理&lt;/li&gt;
  &lt;li&gt;Software engineering process  软件工程过程&lt;/li&gt;
  &lt;li&gt;Software engineering models and methods  软件工程工具和方法&lt;/li&gt;
  &lt;li&gt;Software quality  软件质量&lt;/li&gt;
  &lt;li&gt;Software engineering professional practice  软件工程专业实践&lt;/li&gt;
  &lt;li&gt;Software engineering economics  软件工程经济&lt;/li&gt;
  &lt;li&gt;Computing foundations  计算机基础&lt;/li&gt;
  &lt;li&gt;Mathematical foundations  数学基础&lt;/li&gt;
  &lt;li&gt;Engineering foundations  工程基础&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;解释-cmmi-的五个级别例如level-1---initial无序自发生产模式&quot;&gt;解释 CMMI 的五个级别。例如：Level 1 - Initial：无序，自发生产模式。&lt;/h3&gt;

&lt;h4 id=&quot;level-1---initial-初始级&quot;&gt;Level 1 - Initial 初始级&lt;/h4&gt;

&lt;p&gt;无序，无法预测，有时候甚至是混乱的。项目可能会成功，任务完成中存在很大的偶然性，不能担保按时按期完成任务。研发员是者一个级别最关键的因素。&lt;/p&gt;

&lt;h4 id=&quot;level2---managed-可管理级&quot;&gt;Level2 - Managed 可管理级&lt;/h4&gt;

&lt;p&gt;具备有对项目的管理能力。能够建立比较基础的项目管理规范，对于项目的实施能够列出相应的计划和流程，并且随着流程的进行可以对此实施监控和控制。&lt;/p&gt;

&lt;h4 id=&quot;level3---defined-已定义级&quot;&gt;Level3 - Defined 已定义级&lt;/h4&gt;

&lt;p&gt;已将软件管理和工程两方面的过程文档化、标准化，并综合成该组织的标准软件过程。所有项目均使用经批准、剪裁的标准软件工程来开发和维护软件，软件产品的生产在整个软件过程是可见的。&lt;/p&gt;

&lt;h4 id=&quot;level-4---quantitatively-managed-量化管理级&quot;&gt;Level 4 - Quantitatively Managed 量化管理级&lt;/h4&gt;

&lt;p&gt;数据驱动。分析对软件过程和产品质量的详细度量数据，对软件过程和产品都有定量的理解与控制（管理量化）。能够在定量的范围内预测性能。项目的质量因此保证相对的高质量和稳定。&lt;/p&gt;

&lt;h4 id=&quot;level-5---optimizing-优化管理级&quot;&gt;Level 5 - Optimizing 优化管理级&lt;/h4&gt;

&lt;p&gt;过程的量化反馈和先进的新思想、新技术促使过程持续不断改进。&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;用自己语言简述-swebok-或-cmmi&quot;&gt;用自己语言简述 SWEBok 或 CMMI&lt;/h3&gt;

&lt;p&gt;CMMI是能力成熟度模型集成。CMMI是美国国防部、卡内基梅隆大学、美国国防工业协会共同开发和研制的，它集成了现存的有助于提高企业管理能力和软件质量的实践。25年来，经过政府和组织的不断实践和完善，CMMI模型卓有成效。&lt;/p&gt;

&lt;p&gt;CMMI目的是帮助那些追求高质量、管理能力的企业对软件工程过程进行管理和改进，增强开发、改进、质量监管和盈利能力，使其能够按计划地开发出高质量地软件。&lt;/p&gt;

&lt;p&gt;CMMI包含5个等级，初始级、可管理级、已定义级、量化管理级、优化管理级。每个级别表示这个阶段企业的能力和水平。企业根据这个等级对自身进行评估，不断改进和完善。&lt;/p&gt;

&lt;p&gt;CMMI还包括几个模型，分别是 CMMI-DEV、CMMI-SVC、CMMI-ACQ、P-CMM\DMM，企业根据自身的能力和水平选择合适的模型并加以改进，提升企业的经营水平。&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;解释-psp-各项指标及技能要求&quot;&gt;解释 PSP 各项指标及技能要求：&lt;/h2&gt;

&lt;p&gt;阅读《现代软件工程》的 PSP: Personal Software Process 章节。 &lt;a href=&quot;http://www.cnblogs.com/xinz/archive/2011/11/27/2265425.html&quot;&gt;http://www.cnblogs.com/xinz/archive/2011/11/27/2265425.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;按表格 PSP 2.1， 了解一个软件工程师在接到一个任务之后要做什么，需要哪些技能，解释你打算如何统计每项数据？ （期末考核，每人按开发阶段提交这个表）&lt;/p&gt;

&lt;p&gt;一般来讲，各项数据的用时，可以采用记录开始时间和结束时间来获得。&lt;/p&gt;

&lt;p&gt;每当开始一个阶段任务的时候，记录开始时间，结束时记录结束时间，最后用于分析项目的时间占比。&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;PSP2.1&lt;/th&gt;
      &lt;th&gt;ACTIONS&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;估计任务需要的时间&lt;/td&gt;
      &lt;td&gt;分析任务所需功能，结合以往开发经验，检索资料，了解整个任务的设计和开发难度，确定完成时间&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;strong&gt;开发&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;需求分析（包括学习新技术）&lt;/td&gt;
      &lt;td&gt;结合相类似的项目分析需求，查看是否需要调研，分析、复查，确认需求&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;生成设计文档&lt;/td&gt;
      &lt;td&gt;编写清晰的设计文档，复查审阅&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;设计复审（和同事审核设计文档）&lt;/td&gt;
      &lt;td&gt;明确沟通事项，复审过程清晰标明自己的观点&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;代码规范（为目前的开发制定合适的规范）&lt;/td&gt;
      &lt;td&gt;选择项目开发合适的代码规范&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;具体设计&lt;/td&gt;
      &lt;td&gt;从现有的先进的设计模型中挑选合适的设计方法，形成完整方案&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;具体编码&lt;/td&gt;
      &lt;td&gt;按照代码规范，设计方法编码&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;代码复审&lt;/td&gt;
      &lt;td&gt;按照代码规范、项目功能、设计思路审查&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;测试（自我测试，修改代码，提交修改）&lt;/td&gt;
      &lt;td&gt;测试过程撰写测试报告，报告写下开始时间和结束时间&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;strong&gt;报告&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;测试报告&lt;/td&gt;
      &lt;td&gt;在测试阶段完成&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;计算工作量&lt;/td&gt;
      &lt;td&gt;代码行数、项目用时、项目需求等评判&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;事后总结，并提出过程改进计划&lt;/td&gt;
      &lt;td&gt;分析最终展示成果和预期的差别，各个阶段时间占比，完成项目过程的报告等。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

</description>
        <pubDate>Thu, 22 Mar 2018 09:54:22 +0800</pubDate>
        <link>http://localhost:8080/2018/03/22/homework1/</link>
        <guid isPermaLink="true">http://localhost:8080/2018/03/22/homework1/</guid>
        
        <category>系分作业</category>
        
        
      </item>
    
  </channel>
</rss>
